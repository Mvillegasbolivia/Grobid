<?xml version="1.0" ?>
<tei type="journal-article">
	<teiHeader>
		<fileDesc xml:id="55115137"/>
	</teiHeader>
	<text xml:lang="en">
		<front>
<lb/>
	<note type="other">Chapter 1<lb/></note>

	<docTitle>
	<titlePart>Word Vectors and Quantum Logic<lb/> Experiments with negation and disjunction<lb/></titlePart>
	</docTitle>

	<byline>
	<docAuthor>DOMINIC WIDDOWS AND STANLEY PETERS<lb/></docAuthor>
	</byline>

	<byline>
	<affiliation>STANFORD UNIVERSITY<lb/></affiliation>
	</byline>

	<div type="abstract">A calculus which combined the flexible geometric structure of vector mod-<lb/>els with the crisp efficiency of Boolean logic would be extremely beneficial for<lb/> modelling natural language. With this goal in mind, we present a formulation for<lb/> logical connectives in vector spaces based on standard linear algebra, giving ex-<lb/>amples of the use of vector negation to discriminate between different senses of<lb/> ambiguous words. It turns out that the operators developed in this way are pre-<lb/>cisely the connectives of quantum logic (Birkhoff and von Neumann, 1936), which<lb/> to our knowledge have not been exploited before in natural language processing.<lb/> In quantum logic, arbitrary sets are replaced by linear subspaces of a vector space,<lb/> and set unions, intersections and complements are replaced by vector sum, inter-<lb/>section and orthogonal complements of subspaces. We demonstrate that these logi-<lb/>cal connectives (particularly the orthogonal complement for negation) are powerful<lb/> tools for exploring and analysing word meanings and show distinct advantages over<lb/> Boolean operators in document retrieval experiments.<lb/> This paper is organised as follows. In Section 1.1 we describe some of the<lb/> ways vectors have been used to represent the meanings of terms and documents in<lb/> natural language processing, and describe the way the WORD-SPACE used in our<lb/> later experiments is built automatically from text corpora. In Section 1.2 we define<lb/> the logical connectives on vector spaces, focussing particularly on negation and<lb/> disjunction. This introduces the basic material needed to understand the worked<lb/> examples given in Section 1.3, and the document retrieval experiments described<lb/> in Section 1.3.1. Section 1.4 gives a much fuller outline of the theory of quantum<lb/> logic, the natural setting for the operators of Section 1.2. Finally, in Section 1.5, we<lb/> examine the similarities between quantum logic and WORD-SPACE, asking whether<lb/> quantum logic is an appropriate framework for modelling word-meanings or if the<lb/></div>

	<note type="page">1<lb/></note>

	<reference>Proceedings of Mathematics of Language 8 2003<lb/> </reference>

	<note type="other">R. T. Oehrle &amp; J. Rogers (editors).<lb/> Chapter 1,</note>

	<note type="copyright">Copyright &#169;<lb/> 2003, Dominic Widdows and Stanley Peters<lb/> Stanford University .<lb/></note>

	<docTitle>
	<titlePart>Word Vectors and Quantum LogicExperiments with negation and disjunction:</titlePart>
	</docTitle>

	<byline>
	<docAuthor>Dominic Widdows and Stanley PetersS<lb/></docAuthor>
	</byline>

	<div type="abstract">initial successes we have obtained are mainly coincidental.<lb/> To some extent, this paper may have been written backwards, in that the im-<lb/>plementation and examples are at the beginning and most of the theory is at the<lb/> end. This is for two reasons. Firstly, we hoped to make the paper as accessible as<lb/> possible and were afraid that beginning with an introduction to the full machinery<lb/> of quantum logic would defeat this goal before the reader has a chance to realise<lb/> that the techniques and equations used in this work are really quite elementary.<lb/> Secondly, the link with &apos;quantum logic&apos; was itself only brought to our attention<lb/> after the bulk of the results in this paper had been obtained, and since this research<lb/> is very much ongoing, we deemed it appropriate to give an honest account of its<lb/> history and current state.<lb/></div>

		</front>
	</text>
</tei>
